/*eslint no-console: 0*/
"use strict";

var child_process = require('child_process');
var path = require('path');

function deploy(contentDir, deployerEnv, callback, io) {

    var stdio;
    if (io === undefined) {
        stdio = ['ignore', process.stdout, process.stderr, 'ipc'];
    } else {
        stdio = ['ignore', 'pipe', 'pipe', 'ipc'];
    }
    var response = { messages: [] };
    //console.log('forking hdi-deploy...');
    var pathToDeployer = path.join(__dirname, 'deploy.js');
    var deployer = child_process.fork(pathToDeployer, ['--exit', '--send-messages-to-parent-process'],
        {
            cwd: contentDir,
            env: deployerEnv,
            stdio: stdio
        }
    );

    deployer.on('message', function(message) {
        if (message.hasOwnProperty('final_message_sent'))
        {
            deployer.send({final_message_received:{}});
        } else {
            response.messages.push(message);
        }
    });

    if (io) // not null and not undefined
    {
        if (io.stdoutCB !== undefined) {
            deployer.stdout.on('data', io.stdoutCB);
        }

        if (io.stderrCB !== undefined) {
            deployer.stderr.on('data', io.stderrCB);
        }
    }

    deployer.on('close', function(code) {
        //console.log('hdi-deploy finished.');
        response.exitCode = code;
        callback(response);
    });
}

module.exports = {
    deploy: deploy
};
